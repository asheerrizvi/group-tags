{"version":3,"sources":["Tag.js","Group.js","App.js","data/demodata.js","index.js"],"names":["Container","styled","div","props","isDragging","Tag","draggableId","this","tag","id","index","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","content","group","toUpperCase","Component","Title","h3","TagList","isDraggingOver","Tip","span","Group","title","droppableId","direction","droppableProps","tags","length","map","key","placeholder","App","state","data","onDragEnd","result","destination","source","start","groups","finish","newTagIds","tagIds","splice","newGroup","newState","setState","localStorage","setItem","JSON","stringify","startTagIds","newStart","finishTagIds","newFinish","newTag","getItem","parse","groupOrder","groupId","tagId","cpu","memory","gpu","parts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.621c5f64.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nconst Container = styled.div`\r\n  border: 1px solid lightgrey;\r\n  border-radius: 9999px;\r\n  padding: 0.5rem 0.75rem;\r\n  margin: 0.5rem;\r\n  font-size: 0.875rem;\r\n  font-weight: 600;\r\n  background-color: ${(props) => (props.isDragging ? 'lightgreen' : 'white')};\r\n`;\r\n\r\nclass Tag extends Component {\r\n  render() {\r\n    return (\r\n      <Draggable draggableId={this.props.tag.id} index={this.props.index}>\r\n        {(provided, snapshot) => (\r\n          <Container\r\n            ref={provided.innerRef}\r\n            isDragging={snapshot.isDragging}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n          >\r\n            {this.props.tag.content}, Group: {this.props.tag.group.toUpperCase()}\r\n          </Container>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tag;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport Tag from \"./Tag.js\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0.75rem;\r\n  border-radius: 2px;\r\n`;\r\nconst Title = styled.h3`\r\n  font-size: 2rem;\r\n  padding: 8px;\r\n`;\r\nconst TagList = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  border: 1px solid #cbd5e0;\r\n  border-radius: 5px;\r\n  padding: 2rem;\r\n  margin-top: 0.75rem;\r\n  background-color: ${(props) => (props.isDraggingOver ? \"skyblue\" : \"white\")};\r\n  color: ${(props) => (props.isDraggingOver ? \"skyblue\" : 'inherit')};\r\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);\r\n`;\r\nconst Tip = styled.span`\r\n  font-size: 1rem;\r\n  padding-top: 2rem;\r\n  padding-bottom: 2rem;\r\n`;\r\n\r\nclass Group extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Title>{this.props.group.title}</Title>\r\n        <Droppable droppableId={this.props.group.id} direction={\"horizontal\"}>\r\n          {(provided, snapshot) => (\r\n            <TagList\r\n              ref={provided.innerRef}\r\n              isDraggingOver={snapshot.isDraggingOver}\r\n              {...provided.droppableProps}\r\n            >\r\n              {this.props.tags.length > 0 ? (\r\n                this.props.tags.map((tag, index) => (\r\n                  <Tag key={tag.id} tag={tag} index={index} />\r\n                ))\r\n              ) : (\r\n                <Tip>\r\n                  Empty dropzone, you can drop your content within this area!\r\n                </Tip>\r\n              )}\r\n              {provided.placeholder}\r\n            </TagList>\r\n          )}\r\n        </Droppable>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Group;\r\n","import React, { Component } from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\n\r\nimport Group from \"./Group.js\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  margin: 1.5rem 0;\r\n  padding: 0 6rem;\r\n`;\r\n\r\nclass App extends Component {\r\n  state = this.props.data;\r\n\r\n  // Check if there is data within localStorage,\r\n  // if yes, retrieve that data and store it in the app state.\r\n  componentDidMount() {\r\n    const data = localStorage.getItem(\"data\");\r\n    if (data) {\r\n      this.setState(JSON.parse(data));\r\n    }\r\n  }\r\n\r\n  // This handler is fired when the dragging stops.\r\n  onDragEnd = (result) => {\r\n    const { destination, source, draggableId } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    // Check if there is a need to update the tag / group.\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // Get source, destination and the tag associated with the event.\r\n    const start = this.state.groups[source.droppableId];\r\n    const finish = this.state.groups[destination.droppableId];\r\n    const tag = this.state.tags[draggableId];\r\n\r\n    // If the tag is moved within the same group, just change its index and update state.\r\n    if (start === finish) {\r\n      const newTagIds = [...start.tagIds];\r\n      newTagIds.splice(source.index, 1);\r\n      newTagIds.splice(destination.index, 0, draggableId);\r\n\r\n      const newGroup = {\r\n        ...start,\r\n        tagIds: newTagIds,\r\n      };\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        groups: {\r\n          ...this.state.groups,\r\n          [newGroup.id]: newGroup,\r\n        },\r\n      };\r\n\r\n      this.setState(newState);\r\n      localStorage.setItem(\"data\", JSON.stringify(newState));\r\n      return;\r\n    }\r\n\r\n    // Perform additional actions if the tag is moved between two groups.\r\n    const startTagIds = [...start.tagIds];\r\n    startTagIds.splice(source.index, 1);\r\n    const newStart = {\r\n      ...start,\r\n      tagIds: startTagIds,\r\n    };\r\n\r\n    const finishTagIds = [...finish.tagIds];\r\n    finishTagIds.splice(destination.index, 0, draggableId);\r\n    const newFinish = {\r\n      ...finish,\r\n      tagIds: finishTagIds,\r\n    };\r\n\r\n    const newTag = {\r\n      ...tag,\r\n      group: finish.id,\r\n    };\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      tags: {\r\n        ...this.state.tags,\r\n        [newTag.id]: newTag,\r\n      },\r\n      groups: {\r\n        ...this.state.groups,\r\n        [newStart.id]: newStart,\r\n        [newFinish.id]: newFinish,\r\n      },\r\n    };\r\n\r\n    this.setState(newState);\r\n    localStorage.setItem(\"data\", JSON.stringify(newState));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <Container>\r\n          {this.state.groupOrder.map((groupId) => {\r\n            const group = this.state.groups[groupId];\r\n            const tags = group.tagIds.map((tagId) => this.state.tags[tagId]);\r\n\r\n            return <Group key={group.id} group={group} tags={tags} />;\r\n          })}\r\n        </Container>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const data = {\r\n  tags: {\r\n    \"ryzen-5-3500X\": {\r\n      id: \"ryzen-5-3500X\",\r\n      content: \"Ryzen 5 3950X\",\r\n      group: \"parts\",\r\n    },\r\n    \"ryzen-7-3700X\": {\r\n      id: \"ryzen-7-3700X\",\r\n      content: \"Ryzen 7 3700X\",\r\n      group: \"parts\",\r\n    },\r\n    \"ryzen-9-3900X\": {\r\n      id: \"ryzen-9-3900X\",\r\n      content: \"Ryzen 9 3900X\",\r\n      group: \"parts\",\r\n    },\r\n    \"trident-z-16GB\": {\r\n      id: \"trident-z-16GB\",\r\n      content: \"Trident Z 16GB\",\r\n      group: \"parts\",\r\n    },\r\n    \"corsair-vengence-16GB\": {\r\n      id: \"corsair-vengence-16GB\",\r\n      content: \"Corsair Vengence 16GB\",\r\n      group: \"parts\",\r\n    },\r\n    \"rtx-3070\": { id: \"rtx-3070\", content: \"Nvidia RTX 3070\", group: \"parts\" },\r\n    \"rtx-3080\": { id: \"rtx-3080\", content: \"Nvidia RTX 3080\", group: \"parts\" },\r\n    \"rtx-3090\": { id: \"rtx-3090\", content: \"Nvidia RTX 3090\", group: \"parts\" },\r\n  },\r\n  groups: {\r\n    cpu: {\r\n      id: \"cpu\",\r\n      title: \"All CPUs\",\r\n      tagIds: [],\r\n    },\r\n    memory: {\r\n      id: \"memory\",\r\n      title: \"All RAMs\",\r\n      tagIds: [],\r\n    },\r\n    gpu: {\r\n      id: \"gpu\",\r\n      title: \"All GPUs\",\r\n      tagIds: [],\r\n    },\r\n    parts: {\r\n      id: \"parts\",\r\n      title: \"All Parts\",\r\n      tagIds: [\r\n        \"ryzen-5-3500X\",\r\n        \"ryzen-7-3700X\",\r\n        \"ryzen-9-3900X\",\r\n        \"trident-z-16GB\",\r\n        \"corsair-vengence-16GB\",\r\n        \"rtx-3070\",\r\n        \"rtx-3080\",\r\n        \"rtx-3090\",\r\n      ],\r\n    },\r\n  },\r\n  groupOrder: [\"parts\", \"cpu\", \"memory\", \"gpu\"],\r\n};\r\n\r\nexport default data;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@atlaskit/css-reset\";\r\nimport App from \"./App\";\r\nimport data from \"./data/demodata\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App data={data} />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}